/* -*- c++ -*- */
/*
 * Copyright (C) 2010 The Android Open Source Project
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef ANDROID_ASTL_IOSTREAM__
#define ANDROID_ASTL_IOSTREAM__

#include <ios_base.h>
#include <ostream>

/**
 * Declaration of the standard stream objects.
 *
 * The inclusion of this header will guarantee the initialization of
 * the std streams. Since it uses statics (see ioinit below) to
 * initialize the cout/cerr streams and that statics are initialized
 * in their declaration order, it is best to include this file first
 * just in case another included one uses cout/cerr in a static
 * instance constructor.
 *
 * The storage for cout and cerr is in ios_globals.cpp.
 */

namespace std {
// cin and clog are not supported.
// No wchar support either.
extern ostream cout;  // Linked to standard output
extern ostream cerr;  // Linked to standard error (unbuffered)

// Each translation unit that includes this file will get a copy of
// this static variable. Its construction ensures that the standard
// streams (cout, cerr, etc...) have been initialized.
// The destruction of each instance of ioinit will flush the
// streams (e.g on unload).
static ios_base::Init ioinit;

}  // namespace std

#endif
